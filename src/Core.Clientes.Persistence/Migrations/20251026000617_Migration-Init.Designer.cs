// <auto-generated />
using System;
using Core.Clientes.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Clientes.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251026000617_Migration-Init")]
    partial class MigrationInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Clientes.Domain.Entities.api_log_cliente_detail", b =>
                {
                    b.Property<int>("api_log_cliente_detail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("api_log_cliente_detail_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("api_log_cliente_detail_id"));

                    b.Property<int?>("api_log_cliente_header_id")
                        .HasColumnType("int")
                        .HasColumnName("api_log_cliente_header_id");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("data_message")
                        .HasMaxLength(300)
                        .HasColumnType("text");

                    b.Property<string>("process_component")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("status_code")
                        .HasColumnType("int");

                    b.Property<string>("type_process")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("api_log_cliente_detail_id");

                    b.HasIndex("api_log_cliente_header_id");

                    b.ToTable("api_log_cliente_detail", (string)null);
                });

            modelBuilder.Entity("Core.Clientes.Domain.Entities.api_log_cliente_header", b =>
                {
                    b.Property<int>("api_log_cliente_header_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("api_log_cliente_header_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("api_log_cliente_header_id"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("id_tracking")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("request_method")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("request_url")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("response_code")
                        .HasColumnType("int");

                    b.HasKey("api_log_cliente_header_id");

                    b.ToTable("api_log_cliente_header", (string)null);
                });

            modelBuilder.Entity("Core.Clientes.Domain.Entities.cliente", b =>
                {
                    b.Property<int>("cliente_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cliente_id"));

                    b.Property<string>("apellido_materno")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("apellido_paterno")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("identificacion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("primer_nombre")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("segundo_nombre")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("username")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("cliente_id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Core.Clientes.Domain.Entities.contacto", b =>
                {
                    b.Property<int>("contacto_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("contacto_id"));

                    b.Property<int?>("cliente_id")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("email")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("telefono")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("contacto_id");

                    b.HasIndex("cliente_id");

                    b.ToTable("contacto", (string)null);
                });

            modelBuilder.Entity("Core.Clientes.Domain.Entities.api_log_cliente_detail", b =>
                {
                    b.HasOne("Core.Clientes.Domain.Entities.api_log_cliente_header", "api_log_cliente_header")
                        .WithMany("api_log_cliente_detail")
                        .HasForeignKey("api_log_cliente_header_id")
                        .HasConstraintName("fk_cliente_header_detail");

                    b.Navigation("api_log_cliente_header");
                });

            modelBuilder.Entity("Core.Clientes.Domain.Entities.contacto", b =>
                {
                    b.HasOne("Core.Clientes.Domain.Entities.cliente", "cliente")
                        .WithMany("contacto")
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("Core.Clientes.Domain.Entities.api_log_cliente_header", b =>
                {
                    b.Navigation("api_log_cliente_detail");
                });

            modelBuilder.Entity("Core.Clientes.Domain.Entities.cliente", b =>
                {
                    b.Navigation("contacto");
                });
#pragma warning restore 612, 618
        }
    }
}
